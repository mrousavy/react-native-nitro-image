///
/// NitroImageOnLoad.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#ifndef BUILDING_NITROIMAGE_WITH_GENERATED_CMAKE_PROJECT
#error NitroImageOnLoad.cpp is not being built with the autogenerated CMakeLists.txt project. Is a different CMakeLists.txt building this?
#endif

#include "NitroImageOnLoad.hpp"

#include <jni.h>
#include <fbjni/fbjni.h>
#include <NitroModules/HybridObjectRegistry.hpp>

#include "JHybridImageSpec.hpp"
#include "JHybridImageFactorySpec.hpp"
#include "JHybridImageLoaderSpec.hpp"
#include "JHybridImageLoaderFactorySpec.hpp"
#include "JHybridImageUtilsSpec.hpp"
#include "JHybridNitroImageViewSpec.hpp"
#include "views/JHybridNitroImageViewStateUpdater.hpp"
#include <NitroModules/DefaultConstructableObject.hpp>

namespace margelo::nitro::image {

int initialize(JavaVM* vm) {
  using namespace margelo::nitro;
  using namespace margelo::nitro::image;
  using namespace facebook;

  return facebook::jni::initialize(vm, [] {
    // Register native JNI methods
    margelo::nitro::image::JHybridImageSpec::registerNatives();
    margelo::nitro::image::JHybridImageFactorySpec::registerNatives();
    margelo::nitro::image::JHybridImageLoaderSpec::registerNatives();
    margelo::nitro::image::JHybridImageLoaderFactorySpec::registerNatives();
    margelo::nitro::image::JHybridImageUtilsSpec::registerNatives();
    margelo::nitro::image::JHybridNitroImageViewSpec::registerNatives();
    margelo::nitro::image::views::JHybridNitroImageViewStateUpdater::registerNatives();

    // Register Nitro Hybrid Objects
    HybridObjectRegistry::registerHybridObjectConstructor(
      "ImageFactory",
      []() -> std::shared_ptr<HybridObject> {
        static DefaultConstructableObject<JHybridImageFactorySpec::javaobject> object("com/margelo/nitro/image/HybridImageFactory");
        auto instance = object.create();
        auto globalRef = jni::make_global(instance);
        return globalRef->cthis()->shared();
      }
    );
    HybridObjectRegistry::registerHybridObjectConstructor(
      "ImageLoaderFactory",
      []() -> std::shared_ptr<HybridObject> {
        static DefaultConstructableObject<JHybridImageLoaderFactorySpec::javaobject> object("com/margelo/nitro/image/HybridImageLoaderFactory");
        auto instance = object.create();
        auto globalRef = jni::make_global(instance);
        return globalRef->cthis()->shared();
      }
    );
    HybridObjectRegistry::registerHybridObjectConstructor(
      "ImageUtils",
      []() -> std::shared_ptr<HybridObject> {
        static DefaultConstructableObject<JHybridImageUtilsSpec::javaobject> object("com/margelo/nitro/image/HybridImageUtils");
        auto instance = object.create();
        auto globalRef = jni::make_global(instance);
        return globalRef->cthis()->shared();
      }
    );
    HybridObjectRegistry::registerHybridObjectConstructor(
      "NitroImageView",
      []() -> std::shared_ptr<HybridObject> {
        static DefaultConstructableObject<JHybridNitroImageViewSpec::javaobject> object("com/margelo/nitro/image/HybridImageView");
        auto instance = object.create();
        auto globalRef = jni::make_global(instance);
        return globalRef->cthis()->shared();
      }
    );
  });
}

} // namespace margelo::nitro::image
