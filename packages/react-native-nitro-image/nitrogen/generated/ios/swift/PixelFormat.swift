///
/// PixelFormat.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `PixelFormat`, backed by a C++ enum.
 */
public typealias PixelFormat = margelo.nitro.image.PixelFormat

public extension PixelFormat {
  /**
   * Get a PixelFormat for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "ARGB":
        self = .argb
      case "BGRA":
        self = .bgra
      case "ABGR":
        self = .abgr
      case "RGBA":
        self = .rgba
      case "XRGB":
        self = .xrgb
      case "BGRX":
        self = .bgrx
      case "XBGR":
        self = .xbgr
      case "RGBX":
        self = .rgbx
      case "RGB":
        self = .rgb
      case "BGR":
        self = .bgr
      case "unknown":
        self = .unknown
      default:
        return nil
    }
  }

  /**
   * Get the String value this PixelFormat represents.
   */
  var stringValue: String {
    switch self {
      case .argb:
        return "ARGB"
      case .bgra:
        return "BGRA"
      case .abgr:
        return "ABGR"
      case .rgba:
        return "RGBA"
      case .xrgb:
        return "XRGB"
      case .bgrx:
        return "BGRX"
      case .xbgr:
        return "XBGR"
      case .rgbx:
        return "RGBX"
      case .rgb:
        return "RGB"
      case .bgr:
        return "BGR"
      case .unknown:
        return "unknown"
    }
  }
}
