///
/// HybridNitroImageViewSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroImageViewSpec``
public protocol HybridNitroImageViewSpec_protocol: HybridObject, HybridView {
  // Properties
  var image: Variant__any_HybridImageSpec___any_HybridImageLoaderSpec_? { get set }
  var resizeMode: ResizeMode? { get set }
  var recyclingKey: String? { get set }

  // Methods
  
}

/// See ``HybridNitroImageViewSpec``
open class HybridNitroImageViewSpec_base {
  private weak var cxxWrapper: HybridNitroImageViewSpec_cxx? = nil
  public init() { }
  public func getCxxWrapper() -> HybridNitroImageViewSpec_cxx {
  #if DEBUG
    guard self is HybridNitroImageViewSpec else {
      fatalError("`self` is not a `HybridNitroImageViewSpec`! Did you accidentally inherit from `HybridNitroImageViewSpec_base` instead of `HybridNitroImageViewSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroImageViewSpec_cxx(self as! HybridNitroImageViewSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroImageView HybridObject.
 * Implement this protocol to create Swift-based instances of NitroImageView.
 * ```swift
 * class HybridNitroImageView : HybridNitroImageViewSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroImageViewSpec = HybridNitroImageViewSpec_protocol & HybridNitroImageViewSpec_base
