///
/// NitroImageAutolinking.mm
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#import <Foundation/Foundation.h>
#import <NitroModules/HybridObjectRegistry.hpp>
#import "NitroImage-Swift-Cxx-Umbrella.hpp"
#import <type_traits>

#include "HybridImageFactorySpecSwift.hpp"
#include "HybridImageLoaderFactorySpecSwift.hpp"
#include "HybridImageUtilsSpecSwift.hpp"
#include "HybridNitroImageViewSpecSwift.hpp"

@interface NitroImageAutolinking : NSObject
@end

@implementation NitroImageAutolinking

+ (void) load {
  using namespace margelo::nitro;
  using namespace margelo::nitro::image;

  HybridObjectRegistry::registerHybridObjectConstructor(
    "ImageFactory",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<margelo::nitro::image::HybridImageFactorySpec> hybridObject = NitroImage::NitroImageAutolinking::createImageFactory();
      return hybridObject;
    }
  );
  HybridObjectRegistry::registerHybridObjectConstructor(
    "ImageLoaderFactory",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<margelo::nitro::image::HybridImageLoaderFactorySpec> hybridObject = NitroImage::NitroImageAutolinking::createImageLoaderFactory();
      return hybridObject;
    }
  );
  HybridObjectRegistry::registerHybridObjectConstructor(
    "ImageUtils",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<margelo::nitro::image::HybridImageUtilsSpec> hybridObject = NitroImage::NitroImageAutolinking::createImageUtils();
      return hybridObject;
    }
  );
  HybridObjectRegistry::registerHybridObjectConstructor(
    "NitroImageView",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<margelo::nitro::image::HybridNitroImageViewSpec> hybridObject = NitroImage::NitroImageAutolinking::createNitroImageView();
      return hybridObject;
    }
  );
}

@end
