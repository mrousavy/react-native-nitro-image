///
/// HybridWebImageLoaderSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules
import NitroImage

/// See ``HybridWebImageLoaderSpec``
public protocol HybridWebImageLoaderSpec_protocol: HybridObject, HybridImageLoaderSpec_protocol {
  // Properties
  

  // Methods
  
}

/// See ``HybridWebImageLoaderSpec``
public class HybridWebImageLoaderSpec_base: HybridImageLoaderSpec_base {
  private weak var cxxWrapper: HybridWebImageLoaderSpec_cxx? = nil
  public override func getCxxWrapper() -> HybridWebImageLoaderSpec_cxx {
  #if DEBUG
    guard self is HybridWebImageLoaderSpec else {
      fatalError("`self` is not a `HybridWebImageLoaderSpec`! Did you accidentally inherit from `HybridWebImageLoaderSpec_base` instead of `HybridWebImageLoaderSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridWebImageLoaderSpec_cxx(self as! HybridWebImageLoaderSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the WebImageLoader HybridObject.
 * Implement this protocol to create Swift-based instances of WebImageLoader.
 * ```swift
 * class HybridWebImageLoader : HybridWebImageLoaderSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridWebImageLoaderSpec = HybridWebImageLoaderSpec_protocol & HybridWebImageLoaderSpec_base
