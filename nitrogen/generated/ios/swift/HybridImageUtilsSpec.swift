///
/// HybridImageUtilsSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridImageUtilsSpec``
public protocol HybridImageUtilsSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func thumbHashToBase64String(thumbhash: ArrayBufferHolder) throws -> String
  func thumbhashFromBase64String(thumbhashBase64: String) throws -> ArrayBufferHolder
}

/// See ``HybridImageUtilsSpec``
public class HybridImageUtilsSpec_base {
  private weak var cxxWrapper: HybridImageUtilsSpec_cxx? = nil
  public func getCxxWrapper() -> HybridImageUtilsSpec_cxx {
  #if DEBUG
    guard self is HybridImageUtilsSpec else {
      fatalError("`self` is not a `HybridImageUtilsSpec`! Did you accidentally inherit from `HybridImageUtilsSpec_base` instead of `HybridImageUtilsSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridImageUtilsSpec_cxx(self as! HybridImageUtilsSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the ImageUtils HybridObject.
 * Implement this protocol to create Swift-based instances of ImageUtils.
 * ```swift
 * class HybridImageUtils : HybridImageUtilsSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridImageUtilsSpec = HybridImageUtilsSpec_protocol & HybridImageUtilsSpec_base
